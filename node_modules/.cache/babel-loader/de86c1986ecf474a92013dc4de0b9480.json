{"ast":null,"code":"var _jsxFileName = \"/Users/shrutika/Desktop/Main_Desktop/pucho_localisation-master/src/containers/fetch_text.js\";\nimport React, { Component } from 'react';\n\nclass FetchText extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lang: [],\n      originalSen: [],\n      convertedSen: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8000/getSentence/1').then(response => response.text().then(findresponse => {\n      console.log(findresponse);\n      /* this title is a field in the json file*/\n\n      var obj = JSON.parse(findresponse);\n      console.log(typeof obj);\n      console.log(obj);\n      var original = obj.map(function (el) {\n        return el.originalSentence;\n      }); //this originalSentence is coming from SentenceData at sentenceControlle\n\n      console.log(original);\n      var converted = obj.map(function (el) {\n        return el.convertedSentence;\n      });\n      var destLang = obj.map(function (el) {\n        return el.destinationLang;\n      });\n      this.setState({\n        lang: destLang,\n        originalSen: original,\n        convertedSen: converted\n      });\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Primary\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"OriginalSentence\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" \", this.state.originalSen, \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Select Language\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" \", this.state.lang, \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"convertedSentence\"), React.createElement(\"p\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.convertedSen));\n  }\n\n}\n\nexport default FetchText;","map":{"version":3,"sources":["/Users/shrutika/Desktop/Main_Desktop/pucho_localisation-master/src/containers/fetch_text.js"],"names":["React","Component","FetchText","constructor","state","lang","originalSen","convertedSen","componentDidMount","fetch","then","response","text","findresponse","console","log","obj","JSON","parse","original","map","el","originalSentence","converted","convertedSentence","destLang","destinationLang","setState","render","color"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAiC;AAC/BE,EAAAA,WAAW,GACX;AACE;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,WAAW,EAAC,EAFH;AAGTC,MAAAA,YAAY,EAAC;AAHJ,KAAX;AAOD;;AACDC,EAAAA,iBAAiB,GACjB;AACEC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAYA,QAAQ,CAACC,IAAT,GACjBF,IADiB,CACXG,YAAD,IAAgB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAA0B;;AAE1B,UAAIG,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOC,GAAnB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAEA,UAAIG,QAAQ,GAAGH,GAAG,CAACI,GAAJ,CAAQ,UAAUC,EAAV,EAAc;AAAE,eAAOA,EAAE,CAACC,gBAAV;AAA6B,OAArD,CAAf,CAPoB,CAOmD;;AACvER,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AAEA,UAAII,SAAS,GAAGP,GAAG,CAACI,GAAJ,CAAQ,UAAUC,EAAV,EAAc;AAAE,eAAOA,EAAE,CAACG,iBAAV;AAA8B,OAAtD,CAAhB;AAEA,UAAIC,QAAQ,GAAGT,GAAG,CAACI,GAAJ,CAAQ,UAAUC,EAAV,EAAc;AAAE,eAAOA,EAAE,CAACK,eAAV;AAA4B,OAApD,CAAf;AAEA,WAAKC,QAAL,CAAc;AACZtB,QAAAA,IAAI,EAACoB,QADO;AAEZnB,QAAAA,WAAW,EAACa,QAFA;AAGZZ,QAAAA,YAAY,EAACgB;AAHD,OAAd;AAKD,KApBiB,CADlB;AAsBA;;AACFK,EAAAA,MAAM,GACN;AACE,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKxB,KAAL,CAAWE,WAAhB,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKF,KAAL,CAAWC,IAAhB,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANF,EAOE;AAAG,MAAA,KAAK,EAAE;AAACwB,QAAAA,KAAK,EAAC;AAAP,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKzB,KAAL,CAAWG,YAAtC,CAPF,CADJ;AAaD;;AApD8B;;AAwDjC,eAAeL,SAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass FetchText extends Component{\n  constructor()\n  {\n    super();\n    this.state={\n      lang: [],\n      originalSen:[],\n      convertedSen:[],\n\n\n    }\n  }\n  componentDidMount()\n  {\n    fetch('http://localhost:8000/getSentence/1')\n    .then((response)=>response.text()\n    .then((findresponse)=>{\n      console.log(findresponse) /* this title is a field in the json file*/\n\n      var obj = JSON.parse(findresponse);\n      console.log(typeof(obj));\n      console.log(obj)\n\n      var original = obj.map(function (el) { return el.originalSentence; }); //this originalSentence is coming from SentenceData at sentenceControlle\n      console.log(original);\n\n      var converted = obj.map(function (el) { return el.convertedSentence; });\n\n      var destLang = obj.map(function (el) { return el.destinationLang; });\n\n      this.setState({\n        lang:destLang,\n        originalSen:original,\n        convertedSen:converted,\n      })\n    })\n  )}\n  render()\n  {\n    return(\n        <div>\n        <Button variant=\"outline-primary\">Primary</Button>\n          <h3>OriginalSentence</h3>\n          <p> {this.state.originalSen} </p>\n          <h3>Select Language</h3>\n          <p> {this.state.lang} </p>\n          <h3>convertedSentence</h3>\n          <p style={{color:\"blue\"}}>{this.state.convertedSen}</p>\n\n\n        </div>\n    )\n  }\n\n}\n\nexport default FetchText;\n"]},"metadata":{},"sourceType":"module"}