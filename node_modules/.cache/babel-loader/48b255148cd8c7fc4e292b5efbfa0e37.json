{"ast":null,"code":"var _jsxFileName = \"/Users/shrutika/Desktop/Main_Desktop/pucho_localisation-master/src/containers/fetch_text.js\";\nimport React, { Component } from 'react';\n\nclass FetchText extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      originalSen: [],\n      convertedSen: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8000/getSentence/1').then(response => response.text().then(findresponse => {\n      console.log(findresponse);\n      /* this title is a field in the json file*/\n\n      console.log(findresponse[5]);\n      var obj = JSON.parse(findresponse);\n      console.log(typeof findresponse);\n      this.setState({\n        data: findresponse,\n        originalSen: findresponse.originalSentence,\n        convertedSen: findresponse.convertedSentence\n      });\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" \", this.state.data, \" \"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"originalSentence\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" \", this.state.originalSen, \" \"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"convertedSentence\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.convertedSen));\n  }\n\n}\n\nexport default FetchText;","map":{"version":3,"sources":["/Users/shrutika/Desktop/Main_Desktop/pucho_localisation-master/src/containers/fetch_text.js"],"names":["React","Component","FetchText","constructor","state","data","originalSen","convertedSen","componentDidMount","fetch","then","response","text","findresponse","console","log","obj","JSON","parse","setState","originalSentence","convertedSentence","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAiC;AAC/BE,EAAAA,WAAW,GACX;AACE;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,WAAW,EAAC,EAFH;AAGTC,MAAAA,YAAY,EAAC;AAHJ,KAAX;AAOD;;AACDC,EAAAA,iBAAiB,GACjB;AACEC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAYA,QAAQ,CAACC,IAAT,GACjBF,IADiB,CACXG,YAAD,IAAgB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAA0B;;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAAC,CAAD,CAAxB;AACA,UAAIG,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,YAAnB;AACA,WAAKM,QAAL,CAAc;AACZd,QAAAA,IAAI,EAACQ,YADO;AAEZP,QAAAA,WAAW,EAACO,YAAY,CAACO,gBAFb;AAGZb,QAAAA,YAAY,EAACM,YAAY,CAACQ;AAHd,OAAd;AAKD,KAXiB,CADlB;AAaA;;AACFC,EAAAA,MAAM,GACN;AACE,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKlB,KAAL,CAAWC,IAAhB,MADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKD,KAAL,CAAWE,WAAhB,MAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWG,YAAf,CAPF,CADJ;AAaD;;AA3C8B;;AA+CjC,eAAeL,SAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass FetchText extends Component{\n  constructor()\n  {\n    super();\n    this.state={\n      data: [],\n      originalSen:[],\n      convertedSen:[],\n\n\n    }\n  }\n  componentDidMount()\n  {\n    fetch('http://localhost:8000/getSentence/1')\n    .then((response)=>response.text()\n    .then((findresponse)=>{\n      console.log(findresponse) /* this title is a field in the json file*/\n      console.log(findresponse[5])\n      var obj = JSON.parse(findresponse);\n      console.log(typeof(findresponse));\n      this.setState({\n        data:findresponse,\n        originalSen:findresponse.originalSentence,\n        convertedSen:findresponse.convertedSentence,\n      })\n    })\n  )}\n  render()\n  {\n    return(\n        <div>\n          <p> {this.state.data} </p>\n\n          <h2>originalSentence</h2>\n          <p> {this.state.originalSen} </p>\n\n          <h2>convertedSentence</h2>\n          <p>{this.state.convertedSen}</p>\n\n\n        </div>\n    )\n  }\n\n}\n\nexport default FetchText;\n"]},"metadata":{},"sourceType":"module"}