{"ast":null,"code":"var _jsxFileName = \"/Users/shrutika/Desktop/nblik_start/src/containers/registrationForm.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport Checkbox from './checkbox';\nimport checkboxes from './checkboxes';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = () => {\n      return {\n        username: \"\",\n        emailid: \"\",\n        mobileno: \"\",\n        password: \"\",\n        repassword: \"\",\n        errors: {},\n        selectgender: \"Prefer Not to Say\",\n        checkedItems: new Map()\n      };\n    };\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleCheckbox = e => {\n      const item = e.target.name;\n      const isChecked = e.target.checked;\n      this.setState(prevState => ({\n        checkedItems: prevState.checkedItems.set(item, isChecked)\n      }));\n    };\n\n    this.selectHandler = e => {\n      const value = e.target.value;\n      this.setState({\n        selectgender: value\n      });\n    };\n\n    this.validateForm = () => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            emailid = _this$state.emailid,\n            mobileno = _this$state.mobileno,\n            password = _this$state.password,\n            repassword = _this$state.repassword;\n      const errors = {};\n      let formIsValid = true;\n\n      if (!username) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter your username.\";\n      }\n\n      if (typeof username !== \"undefined\") {\n        if (!username.match(/^[a-zA-Z ]*$/)) {\n          formIsValid = false;\n          errors[\"username\"] = \"*Please enter alphabet characters only.\";\n        }\n      }\n\n      if (!emailid) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter your email-ID.\";\n      }\n\n      if (typeof emailid !== \"undefined\") {\n        //regular expression for email validation\n        if (!emailid.match(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i)) {\n          formIsValid = false;\n          errors[\"emailid\"] = \"*Please enter valid email-ID.\";\n        }\n      }\n\n      if (!mobileno) {\n        formIsValid = false;\n        errors[\"mobileno\"] = \"*Please enter your mobile no.\";\n      }\n\n      if (typeof mobileno !== \"undefined\") {\n        if (!mobileno.match(/^[0-9]{10}$/)) {\n          formIsValid = false;\n          errors[\"mobileno\"] = \"*Please enter valid mobile no.\";\n        }\n      }\n\n      if (!password) {\n        formIsValid = false;\n        errors[\"password\"] = \"*Please enter your password.\";\n      }\n\n      if (typeof password !== \"undefined\") {\n        if (!password.match(/^.*(?=.{7,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n          formIsValid = false;\n          errors[\"password\"] = \"*Please enter secure and strong password.\";\n        }\n      }\n\n      if (!repassword) {\n        formIsValid = false;\n        errors[\"repassword\"] = \"*Please enter the password again\";\n      }\n\n      if (typeof repassword !== \"undefined\") {\n        if (repassword !== password) {\n          formIsValid = false;\n          errors[\"repassword\"] = \"*Both passwords are not same\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    };\n\n    this.submituserRegistrationForm = e => {\n      e.preventDefault();\n      console.log(\"i am at initialState\" + JSON.stringify(this.state));\n      this.setState(this.initialState());\n      alert(\"Form submitted\");\n      console.log(JSON.stringify(this.state));\n    };\n\n    this.state = this.initialState();\n  }\n\n  render() {\n    const _this$state$errors = this.state.errors,\n          username = _this$state$errors.username,\n          emailid = _this$state$errors.emailid,\n          mobileno = _this$state$errors.mobileno,\n          password = _this$state$errors.password,\n          repassword = _this$state$errors.repassword;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"main-registration-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Registration page\"), React.createElement(\"form\", {\n      method: \"post\",\n      name: \"userRegistrationForm\",\n      onSubmit: this.submituserRegistrationForm.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, username), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Email ID:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"emailid\",\n      value: this.state.emailid,\n      onChange: this.handleChange,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, emailid), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Mobile No:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"mobileno\",\n      value: this.state.mobileno,\n      onChange: this.handleChange,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, mobileno), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, password), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" Retype Password \"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"repassword\",\n      value: this.state.repassword,\n      onChange: this.handleChange,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, repassword), React.createElement(\"label\", {\n      style: {\n        paddingTop: \"20px\",\n        paddingBottom: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \" Select Gender:\", React.createElement(\"select\", {\n      value: this.state.selectgender,\n      onChange: this.selectHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \" Prefer Not To Say\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \" Female\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \" Male\"))), checkboxes.map(item => React.createElement(\"label\", {\n      key: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, item.name, React.createElement(Checkbox, {\n      name: item.name,\n      checked: this.state.checkedItems.get(item.name),\n      onChange: this.handleCheckbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })))))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/shrutika/Desktop/nblik_start/src/containers/registrationForm.js"],"names":["React","Component","Container","Row","Col","Jumbotron","Checkbox","checkboxes","RegisterForm","constructor","props","initialState","username","emailid","mobileno","password","repassword","errors","selectgender","checkedItems","Map","handleChange","e","name","target","value","setState","handleCheckbox","item","isChecked","checked","prevState","set","selectHandler","validateForm","state","formIsValid","match","submituserRegistrationForm","preventDefault","console","log","JSON","stringify","alert","render","bind","paddingTop","paddingBottom","map","key","get"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport Checkbox from './checkbox';\nimport checkboxes from './checkboxes';\n\nclass RegisterForm extends Component {\n    constructor(props) {\n      super(props);\n      this.state=this.initialState();\n    };\n\ninitialState=()=>{\n  return(\n    {\n      username:\"\",\n      emailid:\"\",\n      mobileno:\"\",\n      password:\"\",\n      repassword:\"\",\n      errors: {},\n      selectgender:\"Prefer Not to Say\",\n      checkedItems: new Map(),\n    }\n  )\n}\n    handleChange = (e) => {\n      const name=e.target.name;\n      const value=e.target.value;\n\n      this.setState({\n        [name]:value\n      });\n    }\n\n  handleCheckbox=(e)=> {\n   const item = e.target.name;\n   const isChecked = e.target.checked;\n   this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n }\n\n  selectHandler=(e)=>{\n    const value=e.target.value\n    this.setState({\n      selectgender: value,\n    })\n  }\n\n    validateForm=() =>\n    {\n      const {username, emailid, mobileno, password, repassword}= this.state;\n\n      const errors = {};\n      let formIsValid = true;\n\n      if (!username) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter your username.\";\n      }\n\n      if (typeof username !== \"undefined\") {\n        if (!username.match(/^[a-zA-Z ]*$/)) {\n          formIsValid = false;\n          errors[\"username\"] = \"*Please enter alphabet characters only.\";\n        }\n      }\n\n      if (!emailid) {\n        formIsValid = false;\n        errors[\"emailid\"] = \"*Please enter your email-ID.\";\n      }\n\n      if (typeof emailid !== \"undefined\") {\n        //regular expression for email validation\n        if (!emailid.match(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i)) {\n          formIsValid = false;\n          errors[\"emailid\"] = \"*Please enter valid email-ID.\";\n        }\n      }\n\n      if (!mobileno) {\n        formIsValid = false;\n        errors[\"mobileno\"] = \"*Please enter your mobile no.\";\n      }\n\n      if (typeof mobileno !== \"undefined\") {\n        if (!mobileno.match(/^[0-9]{10}$/)) {\n          formIsValid = false;\n          errors[\"mobileno\"] = \"*Please enter valid mobile no.\";\n        }\n      }\n\n      if (!password) {\n        formIsValid = false;\n        errors[\"password\"] = \"*Please enter your password.\";\n      }\n\n      if (typeof password !== \"undefined\") {\n        if (!password.match(/^.*(?=.{7,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\n          formIsValid = false;\n          errors[\"password\"] = \"*Please enter secure and strong password.\";\n        }\n      }\n\n      if(!repassword){\n        formIsValid=false;\n        errors[\"repassword\"] = \"*Please enter the password again\";\n      }\n\n      if(typeof repassword!== \"undefined\"){\n        if(repassword!== password){\n          formIsValid=false;\n          errors[\"repassword\"]=\"*Both passwords are not same\";\n        }\n      }\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n  }\n\n\n  submituserRegistrationForm = (e) => {\n    e.preventDefault();\n      console.log(\"i am at initialState\" + JSON.stringify(this.state));\n        this.setState(this.initialState())\n        alert(\"Form submitted\" );\n        console.log(JSON.stringify(this.state));\n    }\n\n\n  render() {\n    const {username,emailid,mobileno,password,repassword}=this.state.errors;\n\n    return (\n      <Container>\n        <Row>\n          <Col lg=\"4\"></Col>\n          <Col>\n          <Jumbotron>\n            <div id=\"main-registration-container\">\n             <div id=\"register\">\n                <h3>Registration page</h3>\n\n                <form method=\"post\"  name=\"userRegistrationForm\"  onSubmit= {this.submituserRegistrationForm.bind(this)} >\n\n                  <label>Name</label>\n                  <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} className=\"form-control\"/>\n                  <div className=\"errorMsg\">{username}</div>\n\n                  <label>Email ID:</label>\n                  <input type=\"text\" name=\"emailid\" value={this.state.emailid} onChange={this.handleChange}  className=\"form-control\" />\n                  <div className=\"errorMsg\">{emailid}</div>\n\n                  <label>Mobile No:</label>\n                  <input type=\"text\" name=\"mobileno\" value={this.state.mobileno} onChange={this.handleChange}  className=\"form-control\" />\n                  <div className=\"errorMsg\">{mobileno}</div>\n\n                  <label>Password</label>\n                  <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} className=\"form-control\" />\n                  <div className=\"errorMsg\">{password}</div>\n\n                  <label> Retype Password </label>\n                  <input type=\"password\" name=\"repassword\" value={this.state.repassword} onChange={this.handleChange} className=\"form-control\" />\n                  <div>{repassword}</div>\n\n                  <label style={{paddingTop:\"20px\", paddingBottom:\"10px\" }}> Select Gender:\n                  <select value={this.state.selectgender} onChange={this.selectHandler}>\n                    <option> Prefer Not To Say</option>\n                    <option> Female</option>\n                    <option> Male</option>\n                  </select>\n                 </label>\n                    {\n                      checkboxes.map(item =>(\n                        <label key={item.key}>\n                          {item.name}\n                          <Checkbox name={item.name} checked={this.state.checkedItems.get(item.name)} onChange={this.handleCheckbox} />\n                        </label>\n                      ))\n                    }\n                  <input type=\"submit\" className=\"button\"  value=\"Submit\"/>\n                </form>\n            </div>\n            </div>\n        </Jumbotron>\n        </Col>\n        <Col>\n        </Col>\n      </Row>\n    </Container>\n      );\n  }\n}\n\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}